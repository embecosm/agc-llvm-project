; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -mtriple=agc -verify-machineinstrs < %s | FileCheck %s

; Check that we can generate conditional and unconditional branches correctly.
; TODO: Handling unsigned comparisons correctly.

define i16 @test_eq(i16 %a, i16 %b) {
; CHECK-LABEL: test_eq:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    ca r50
; CHECK-NEXT:    extend
; CHECK-NEXT:    su r51
; CHECK-NEXT:    extend
; CHECK-NEXT:    bzf %lo12(.LBB0_2)
; CHECK-NEXT:    tcf %lo12(.LBB0_1)
; CHECK-NEXT:  .LBB0_2: # %true
; CHECK-NEXT:    ca zero
; CHECK-NEXT:    ts r50
; CHECK-NEXT:    tc 2
; CHECK-NEXT:  .LBB0_1: # %false
; CHECK-NEXT:    ca %cpi(1)
; CHECK-NEXT:    ts r50
; CHECK-NEXT:    tc 2
entry:
  %tst = icmp eq i16 %a, %b
  br i1 %tst, label %true, label %false
false:
  ret i16 1
true:
  ret i16 0
}

define i16 @test_ne(i16 %a, i16 %b) {
; CHECK-LABEL: test_ne:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    ca r50
; CHECK-NEXT:    extend
; CHECK-NEXT:    su r51
; CHECK-NEXT:    extend
; CHECK-NEXT:    bzf %lo12(.LBB1_3)
; CHECK-NEXT:    tcf %lo12(.LBB1_2)
; CHECK-NEXT:  .LBB1_3: # %entry
; CHECK-NEXT:    # Label of block must be emitted
; CHECK-NEXT:    tcf %lo12(.LBB1_1)
; CHECK-NEXT:  # %bb.2: # %true
; CHECK-NEXT:    ca zero
; CHECK-NEXT:    ts r50
; CHECK-NEXT:    tc 2
; CHECK-NEXT:  .LBB1_1: # %false
; CHECK-NEXT:    ca %cpi(1)
; CHECK-NEXT:    ts r50
; CHECK-NEXT:    tc 2
entry:
  %tst = icmp ne i16 %a, %b
  br i1 %tst, label %true, label %false
false:
  ret i16 1
true:
  ret i16 0
}

define i16 @test_lt(i16 %a, i16 %b) {
; CHECK-LABEL: test_lt:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    ca %cpi(2)
; CHECK-NEXT:    ad sp
; CHECK-NEXT:    ts sp
; CHECK-NEXT:    ca r50
; CHECK-NEXT:    extend
; CHECK-NEXT:    su r51
; CHECK-NEXT:    index sp
; CHECK-NEXT:    ts 0
; CHECK-NEXT:    ca %cpi(1)
; CHECK-NEXT:    ts r50
; CHECK-NEXT:    index sp
; CHECK-NEXT:    ca 0
; CHECK-NEXT:    ad r50
; CHECK-NEXT:    extend
; CHECK-NEXT:    bzmf %lo12(.LBB2_2)
; CHECK-NEXT:    tcf %lo12(.LBB2_1)
; CHECK-NEXT:  .LBB2_2: # %true
; CHECK-NEXT:    ca zero
; CHECK-NEXT:    ts r50
; CHECK-NEXT:  .LBB2_3: # %true
; CHECK-NEXT:    ca %cpi(2)
; CHECK-NEXT:    extend
; CHECK-NEXT:    su sp
; CHECK-NEXT:    ts sp
; CHECK-NEXT:    tc 2
; CHECK-NEXT:  .LBB2_1: # %false
; CHECK-NEXT:    ca %cpi(1)
; CHECK-NEXT:    ts r50
; CHECK-NEXT:    tcf %lo12(.LBB2_3)
entry:
  %tst = icmp slt i16 %a, %b
  br i1 %tst, label %true, label %false
false:
  ret i16 1
true:
  ret i16 0
}

define i16 @test_le(i16 %a, i16 %b) {
; CHECK-LABEL: test_le:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    ca r50
; CHECK-NEXT:    extend
; CHECK-NEXT:    su r51
; CHECK-NEXT:    extend
; CHECK-NEXT:    bzmf %lo12(.LBB3_2)
; CHECK-NEXT:    tcf %lo12(.LBB3_1)
; CHECK-NEXT:  .LBB3_2: # %true
; CHECK-NEXT:    ca zero
; CHECK-NEXT:    ts r50
; CHECK-NEXT:    tc 2
; CHECK-NEXT:  .LBB3_1: # %false
; CHECK-NEXT:    ca %cpi(1)
; CHECK-NEXT:    ts r50
; CHECK-NEXT:    tc 2
entry:
  %tst = icmp sle i16 %a, %b
  br i1 %tst, label %true, label %false
false:
  ret i16 1
true:
  ret i16 0
}

define i16 @test_gt(i16 %a, i16 %b) {
; CHECK-LABEL: test_gt:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    ca %cpi(2)
; CHECK-NEXT:    ad sp
; CHECK-NEXT:    ts sp
; CHECK-NEXT:    ca r51
; CHECK-NEXT:    extend
; CHECK-NEXT:    su r50
; CHECK-NEXT:    index sp
; CHECK-NEXT:    ts 0
; CHECK-NEXT:    ca %cpi(1)
; CHECK-NEXT:    ts r50
; CHECK-NEXT:    index sp
; CHECK-NEXT:    ca 0
; CHECK-NEXT:    ad r50
; CHECK-NEXT:    extend
; CHECK-NEXT:    bzmf %lo12(.LBB4_2)
; CHECK-NEXT:    tcf %lo12(.LBB4_1)
; CHECK-NEXT:  .LBB4_2: # %true
; CHECK-NEXT:    ca zero
; CHECK-NEXT:    ts r50
; CHECK-NEXT:  .LBB4_3: # %true
; CHECK-NEXT:    ca %cpi(2)
; CHECK-NEXT:    extend
; CHECK-NEXT:    su sp
; CHECK-NEXT:    ts sp
; CHECK-NEXT:    tc 2
; CHECK-NEXT:  .LBB4_1: # %false
; CHECK-NEXT:    ca %cpi(1)
; CHECK-NEXT:    ts r50
; CHECK-NEXT:    tcf %lo12(.LBB4_3)
entry:
  %tst = icmp sgt i16 %a, %b
  br i1 %tst, label %true, label %false
false:
  ret i16 1
true:
  ret i16 0
}

define i16 @test_ge(i16 %a, i16 %b) {
; CHECK-LABEL: test_ge:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    ca r51
; CHECK-NEXT:    extend
; CHECK-NEXT:    su r50
; CHECK-NEXT:    extend
; CHECK-NEXT:    bzmf %lo12(.LBB5_2)
; CHECK-NEXT:    tcf %lo12(.LBB5_1)
; CHECK-NEXT:  .LBB5_2: # %true
; CHECK-NEXT:    ca zero
; CHECK-NEXT:    ts r50
; CHECK-NEXT:    tc 2
; CHECK-NEXT:  .LBB5_1: # %false
; CHECK-NEXT:    ca %cpi(1)
; CHECK-NEXT:    ts r50
; CHECK-NEXT:    tc 2
entry:
  %tst = icmp sge i16 %a, %b
  br i1 %tst, label %true, label %false
false:
  ret i16 1
true:
  ret i16 0
}
